"""
The purpose of the `cost` directive is to define a `weight` for GraphQL types,
fields, and arguments. Static analysis can use these weights when calculating
the overall cost of a query or response.
"""
directive @cost(
  """
  The `weight` argument defines what value to add to the overall cost for every
  appearance, or possible appearance, of a type, field, argument, etc.
  """
  weight: String!
) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION

type Mutation {
  createTask(title: String!, description: String!, status: String!): Task!
  updateTaskStatus(id: Int!, status: String!): Task!
}

type Query {
  getAllTasks: [Task!]!
}

type Task {
  id: Int!
  title: String!
  description: String!
  status: String!
}

